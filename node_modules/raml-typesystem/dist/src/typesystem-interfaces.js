"use strict";
exports.REPEAT = "repeat";
exports.PARSE_ERROR = "parseError";
exports.TOP_LEVEL_EXTRA = "topLevel";
exports.DEFINED_IN_TYPES_EXTRA = "definedInTypes";
exports.USER_DEFINED_EXTRA = "USER_DEFINED";
exports.SOURCE_EXTRA = "SOURCE";
exports.SCHEMA_AND_TYPE_EXTRA = "SCHEMA";
exports.GLOBAL_EXTRA = "GLOBAL";
exports.HAS_FACETS = "HAS_FACETS";
exports.HAS_ITEMS = "HAS_ITEMS";
(function (MetaInformationKind) {
    MetaInformationKind[MetaInformationKind["Description"] = 0] = "Description";
    MetaInformationKind[MetaInformationKind["NotScalar"] = 1] = "NotScalar";
    MetaInformationKind[MetaInformationKind["ImportedByChain"] = 2] = "ImportedByChain";
    MetaInformationKind[MetaInformationKind["DisplayName"] = 3] = "DisplayName";
    MetaInformationKind[MetaInformationKind["Usage"] = 4] = "Usage";
    MetaInformationKind[MetaInformationKind["Annotation"] = 5] = "Annotation";
    MetaInformationKind[MetaInformationKind["FacetDeclaration"] = 6] = "FacetDeclaration";
    MetaInformationKind[MetaInformationKind["CustomFacet"] = 7] = "CustomFacet";
    MetaInformationKind[MetaInformationKind["Example"] = 8] = "Example";
    MetaInformationKind[MetaInformationKind["Required"] = 9] = "Required";
    MetaInformationKind[MetaInformationKind["HasPropertiesFacet"] = 10] = "HasPropertiesFacet";
    MetaInformationKind[MetaInformationKind["AllowedTargets"] = 11] = "AllowedTargets";
    MetaInformationKind[MetaInformationKind["Examples"] = 12] = "Examples";
    MetaInformationKind[MetaInformationKind["XMLInfo"] = 13] = "XMLInfo";
    MetaInformationKind[MetaInformationKind["Default"] = 14] = "Default";
    MetaInformationKind[MetaInformationKind["Constraint"] = 15] = "Constraint";
    MetaInformationKind[MetaInformationKind["Modifier"] = 16] = "Modifier";
    MetaInformationKind[MetaInformationKind["Discriminator"] = 17] = "Discriminator";
    MetaInformationKind[MetaInformationKind["DiscriminatorValue"] = 18] = "DiscriminatorValue";
})(exports.MetaInformationKind || (exports.MetaInformationKind = {}));
var MetaInformationKind = exports.MetaInformationKind;
/**
 * Retrieve a list of registered type validation plugins
 */
function getTypeValidationPlugins() {
    var rv = global.ramlValidation;
    if (rv) {
        var typeValidators = rv.typeValidators;
        if (Array.isArray(typeValidators)) {
            return typeValidators;
        }
    }
    return [];
}
exports.getTypeValidationPlugins = getTypeValidationPlugins;
/**
 * Retrieve a list of registered type validation plugins
 */
function getAnnotationValidationPlugins() {
    var rv = global.ramlValidation;
    if (rv) {
        var typesystemAnnotationValidators = rv.typesystemAnnotationValidators;
        if (Array.isArray(typesystemAnnotationValidators)) {
            return typesystemAnnotationValidators;
        }
    }
    return [];
}
exports.getAnnotationValidationPlugins = getAnnotationValidationPlugins;
//# sourceMappingURL=typesystem-interfaces.js.map